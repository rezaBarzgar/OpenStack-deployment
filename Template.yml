heat_template_version: 2015-04-30
resources:
  network:
    type: OS::Neutron::Net
    properties:
      admin_state_up: True
      name: auth_app
      port_security_enabled: True
      shared: False
  
  subnet:
    type: OS::Neutron::Subnet
    properties:
        cidr: 192.168.65.0/26
        gateway_ip: 192.168.65.1
        name: Cloudsubnet
        network_id: { get_resource: network }
        allocation_pools:
        - start: 192.168.65.2
          end: 192.168.65.62
  router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: "public"

  router_interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: router }
      subnet_id: { get_resource: subnet }
#--------------------------end of network--------------------------------------

  db_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Security Group for db, created with Heat
      name: db_group
  ssh_group:
    type: OS::Neutron::SecurityGroup
    properties:
      description: Security Group for db, created with Heat
      name: ssh_group

  tcp_db_group:
    type: OS::Neutron::SecurityGroupRule
    properties:
      direction: ingress
      ethertype: IPv4
      protocol: tcp
      remote_ip_prefix: 192.168.65.0/26
      security_group: { get_resource: db_group }

  udp_db_group:
      type: OS::Neutron::SecurityGroupRule
      properties:
        direction: ingress
        ethertype: IPv4
        protocol: udp
        remote_ip_prefix: 192.168.65.0/26
        security_group: { get_resource: db_group }

  ssh_rule_group:
      type: OS::Neutron::SecurityGroupRule
      properties:
        direction: ingress
        ethertype: IPv4
        port_range_min: 22
        port_range_max: 22
        protocol: tcp
        remote_ip_prefix: 0.0.0.0/0
        security_group: { get_resource: ssh_group }

  ping_rule:
      type: OS::Neutron::SecurityGroupRule
      properties:
        direction: ingress
        ethertype: IPv4
        protocol: icmp
        remote_ip_prefix: 0.0.0.0/0
        security_group: { get_resource: ssh_group }
  #--------------------------end of Security group--------------------------------------

  db_instance:
    type: OS::Nova::Server
    properties:
      availability_zone: nova
      flavor: db_flavor
      image: database_snapshot
      name: database_instance
      networks: [{"network": { get_resource: network }, "fixed_ip": 192.168.65.53, "subnet": { get_resource: subnet } } ]
      security_groups: [{ get_resource: db_group } , { get_resource: ssh_group } ]

  # app_instance_group:
  #   type: OS::Heat::ResourceGroup
  #   properties:
  #     count: 3
  #     resource_def:
  #       type: OS::Nova::Server
  #       properties:
  #         availability_zone: nova
  #         flavor: app_flavor
  #         image: app_snapshot
  #         name: app_instance_%index%
  #         networks: [{"network": { get_resource: network }, "subnet": { get_resource: subnet } } ]
  #         security_groups: [{ get_resource: ssh_group } ]
  server1:
        type: OS::Nova::Server
        properties:
          availability_zone: nova
          flavor: app_flavor
          image: app_snapshot
          name: app_instance_1
          networks: [{"network": { get_resource: network }, "fixed_ip": 192.168.65.54,"subnet": { get_resource: subnet } } ]
          security_groups: [{ get_resource: ssh_group } ]
          
  server2:
        type: OS::Nova::Server
        properties:
          availability_zone: nova
          flavor: app_flavor
          image: app_snapshot
          name: app_instance_2
          networks: [{"network": { get_resource: network }, "fixed_ip": 192.168.65.55,"subnet": { get_resource: subnet } } ]
          security_groups: [{ get_resource: ssh_group } ]

  server3:
        type: OS::Nova::Server
        properties:
          availability_zone: nova
          flavor: app_flavor
          image: app_snapshot
          name: app_instance_3
          networks: [{"network": { get_resource: network }, "fixed_ip": 192.168.65.56,"subnet": { get_resource: subnet } } ]
          security_groups: [{ get_resource: ssh_group } ]





  loadbalancer:
    type: OS::Octavia::LoadBalancer
    properties:
      admin_state_up: True
      name: load_balancer
      vip_subnet: { get_resource: subnet }

  listner:
    type: OS::Octavia::Listener
    properties:
      admin_state_up: True
      connection_limit: -1
      loadbalancer: { get_resource: loadbalancer }
      name: listner
      protocol: HTTP
      protocol_port: 80
  
  pool:
    type: OS::Octavia::Pool
    properties:
      admin_state_up: True
      lb_algorithm: ROUND_ROBIN
      listener: { get_resource: listner }
      loadbalancer: { get_resource: loadbalancer }
      name: pool
      protocol: HTTP

  pool_member:
    type: OS::Octavia::PoolMember
    properties:
      address: 192.168.65.54
      admin_state_up: True
      pool: { get_resource: pool }
      protocol_port: 80
      subnet: { get_resource: subnet }
      weight: 1

  pool_member:
    type: OS::Octavia::PoolMember
    properties:
      address: 192.168.65.55
      admin_state_up: True
      pool: { get_resource: pool }
      protocol_port: 80
      subnet: { get_resource: subnet }
      weight: 1

  pool_member:
    type: OS::Octavia::PoolMember
    properties:
      address: 192.168.65.56
      admin_state_up: True
      pool: { get_resource: pool }
      protocol_port: 80
      subnet: { get_resource: subnet }
      weight: 1

  healthmonitor:
    type: OS::Octavia::HealthMonitor
    properties:
      admin_state_up: True
      delay: 5
      max_retries: 3
      pool: { get_resource: pool}
      timeout: 5
      type: PING


